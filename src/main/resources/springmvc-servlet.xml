<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
		   http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/aop
		   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list >
				<ref bean="mappingJacksonHttpMessageConverter" />
				<!--  本地化UTF-8编码StringHttpMessageConverter  -->
				<bean id="stringHttpMessageConverter" class="com.pay.risk.util.Utf8StringHttpMessageConverter">
			     	<property name = "supportedMediaTypes">
			    		<list>
			    			<value>application/json; charset=UTF-8</value>
			    			<value>text/html;charset=UTF-8</value>
			    			<value>plain/text; charset=UTF-8</value>
			    		</list>
					</property>
			    </bean>
			</list>
		</property>
	</bean>
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<mvc:annotation-driven />

	<!-- 配置支持标注 -->
	<context:annotation-config />

	<!-- 自动扫描bean，把作了注解的类转换为bean -->

	<context:component-scan base-package="com.pay.risk.action" />
	<context:component-scan base-package="com.pay.risk.taglib" />


	<!--  Resource filter  -->
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/image/**" location="/image/" />
	<mvc:resources mapping="/report/**" location="/report/" />
	<mvc:resources mapping="/templates/**" location="/templates/" />


	<!-- 注册权限拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="com.pay.risk.interceptor.LoginPermissionInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!-- springmvc传json值时的乱码解决
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
    	<property name = "supportedMediaTypes">
    		<list>
    			<value>application/json; charset=UTF-8</value>
    			<value>text/html;charset=UTF-8</value>
    		</list>
		</property>
	</bean>
	-->
	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
<!-- 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/jsp/" p:suffix=".jsp" /> -->

	 <bean class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
	   <property name="basename" value="viewBean"/>
	   <property name="order" value="1"/>
	</bean>

<!-- 	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" -->
<!-- 		p:defaultEncoding="utf-8" />   -->

	 <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="utf-8">
        <!-- 指定所上传文件的总大小不能超过2M。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
        <property name="maxUploadSize" value="2000000"/>
    </bean>

    <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/jsp/error_fileupload.jsp</prop>
            </props>
        </property>
    </bean>

</beans>